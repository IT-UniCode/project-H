---
import { FundraisingsPay } from "@components/Fundraisings";
import { confMarkdownNews, clamp } from "@helpers/index";
import Layout from "@layouts/Layout.astro";
import fundraisingsService from "@service/fundraisings.service";
import clsx from "clsx";
import { marked } from "marked";

export const prerender = false;

const { id, slug } = Astro.params;

const { data } = await fundraisingsService.get(id!);
const { goal_sum, current_sum } = data;
const interest = 100 - (current_sum / goal_sum) * 100;
---

<Layout title={data.title}>
  <section class="mb-10">
    <div class="h-[300px] overflow-hidden">
      <img
        class="max-h-full h-full w-full object-top object-cover"
        src=`${data.previewImage}`
        alt="hero"
      />
    </div>
    <div class="max-w-5xl w-full mx-auto px-2 sm:px-0">
      <section
        class="flex flex-col md:flex-row justify-between md:items-center"
      >
        <article class="pr-4">
          <h1 class="text-5xl">
            {data.title}
          </h1>
          <p class="pl-3 pt-2">
            {data.previewText}
          </p>
        </article>

        <FundraisingsPay client:only="preact" fundraisingId={id!} />
      </section>

      <section
        class="flex flex-col gap-y-2 text-lg max-w-xl w-full mx-auto mt-2"
      >
        <article class="flex justify-between">
          <p class="text-start">Goal sum: {data.goal_sum}$</p>
          <p>{clamp(100 - interest, 0, 100).toFixed(1)}%</p>
        </article>
        <section class={clsx("h-2 w-full rounded overflow-hidden relative")}>
          <div
            class={clsx(
              "w-full h-full ",
              "absolute top-0",
              "bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-emerald-500 to-90%",
            )}
          >
          </div>
          <div
            class={clsx("h-full bg-gray-300", "absolute top-0 right-0 z-10")}
            style=`width: ${interest <= 0 ? 0 : interest}%;`
          >
          </div>
        </section>

        <p class="text-end">
          Current sum: {data.current_sum || 0}$
        </p>
      </section>
    </div>
  </section>

  <article
    class="max-w-4xl w-full mx-auto px-2 sm:px-0"
    set:html={marked.parse(data.content, {
      renderer: confMarkdownNews(),
    })}
  />

  <section class="max-w-4xl w-full mx-auto px-2 sm:px-0 mt-4">
    <p class="text-2xl">Top donation</p>
    <ol class="flex flex-col gap-y-2 mt-2">
      {
        data.topDonations.map((v) => (
          <li class="list-decimal list-inside">{(v?.total || 10) / 100}$</li>
        ))
      }
    </ol>
  </section>
</Layout>

<style>
  .hero {
    height: 600px;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
</style>
